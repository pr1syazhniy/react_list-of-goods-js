{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","App","_useState","useState","_useState2","_slicedToArray","isReversed","setIsreversed","_useState3","_useState4","sortType","setSortType","SORT_BY_ALPHABET","SORT_BY_LENGTH","sortedGoods","goods","sortField","goodsCopy","_toConsumableArray","sort","a","b","localeCompare","length","reverse","getSortedGoods","hiddenButton","_jsxs","className","children","_jsx","type","cn","onClick","prev","map","good","ReactDOM","render","document","getElementById"],"mappings":"mPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAM,WACjB,IAAAC,EAAoCC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAA5CI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAChCI,EAAgCL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GACtBG,EAAmB,WACnBC,EAAiB,SA2BvB,IAAMC,EAzBN,SAAwBC,EAAOC,GAC7B,IAAMC,EAASC,YAAOH,GAqBtB,OAnBIL,GACFO,EAAUE,MAAK,SAACC,EAAGC,GACjB,OAAQL,GACN,KAAKJ,EACH,OAAOQ,EAAEE,cAAcD,GAEzB,KAAKR,EACH,OAAOO,EAAEG,OAASF,EAAEE,OAEtB,QACE,OAAO,EAEb,IAGEjB,GACFW,EAAUO,UAGLP,CACT,CAEoBQ,CAAezB,EAAiBU,GAO9CgB,GAA8B,IAAfpB,GAAuBI,EAE5C,OACEiB,eAAA,OAAKC,UAAU,kBAAiBC,SAAA,CAC9BF,eAAA,OAAKC,UAAU,UAASC,SAAA,CACtBC,cAAA,UACEC,KAAK,SACLH,UAAWI,IACT,iBACA,CAAE,WAAYtB,IAAaE,IAE7BqB,QAAS,kBAAMtB,EAAYC,EAAiB,EAACiB,SAC9C,wBAIDC,cAAA,UACEC,KAAK,SACLH,UAAWI,IACT,oBACA,CAAE,WAAYtB,IAAaG,IAE7BoB,QAAS,kBAAMtB,EAAYE,EAAe,EAACgB,SAC5C,mBAIDC,cAAA,UACEC,KAAK,SACLH,UAAWI,IACT,oBACA,CAAE,YAA2B,IAAf1B,IAEhB2B,QAAS,kBAAM1B,GAAc,SAAA2B,GAAI,OAAKA,CAAI,GAAC,EAACL,SAC7C,YAIAH,GACDI,cAAA,UACEC,KAAK,SACLH,UAAU,4BACVK,QA/CY,WAClBtB,EAAY,IACZJ,GAAc,EAChB,EA4C6BsB,SACtB,aAMHC,cAAA,MAAAD,SACGf,EAAYqB,KAAI,SAAAC,GAAI,OACnBN,cAAA,MAAI,UAAQ,OAAMD,SAAaO,GAAPA,EAAiB,QAKnD,EC7GAC,IAASC,OACPR,cAAC7B,EAAG,IACJsC,SAASC,eAAe,Q","file":"static/js/main.a46e40e8.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport { useState } from 'react';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App = () => {\n  const [isReversed, setIsreversed] = useState(false);\n  const [sortType, setSortType] = useState('');\n  const SORT_BY_ALPHABET = 'alphabet';\n  const SORT_BY_LENGTH = 'length';\n\n  function getSortedGoods(goods, sortField) {\n    const goodsCopy = [...goods];\n\n    if (sortType) {\n      goodsCopy.sort((a, b) => {\n        switch (sortField) {\n          case SORT_BY_ALPHABET:\n            return a.localeCompare(b);\n\n          case SORT_BY_LENGTH:\n            return a.length - b.length;\n\n          default:\n            return 0;\n        }\n      });\n    }\n\n    if (isReversed) {\n      goodsCopy.reverse();\n    }\n\n    return goodsCopy;\n  }\n\n  const sortedGoods = getSortedGoods(goodsFromServer, sortType, isReversed);\n\n  const resetButton = () => {\n    setSortType('');\n    setIsreversed(false);\n  };\n\n  const hiddenButton = isReversed === true || sortType;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-info',\n            { 'is-light': sortType !== SORT_BY_ALPHABET },\n          )}\n          onClick={() => setSortType(SORT_BY_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-success',\n            { 'is-light': sortType !== SORT_BY_LENGTH },\n          )}\n          onClick={() => setSortType(SORT_BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-warning',\n            { 'is-light': isReversed === false },\n          )}\n          onClick={() => setIsreversed(prev => !prev)}\n        >\n          Reverse\n        </button>\n\n        {hiddenButton && (\n        <button\n          type=\"button\"\n          className=\"button is-danger is-light\"\n          onClick={resetButton}\n        >\n          Reset\n        </button>\n        )}\n      </div>\n\n      <ul>\n        {sortedGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}